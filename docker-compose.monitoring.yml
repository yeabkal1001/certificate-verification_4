version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus/config:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitoring-network
      - app-network
    deploy:
      resources:
        limits:
          cpus: '${PROMETHEUS_CPU_LIMIT:-0.5}'
          memory: '${PROMETHEUS_MEMORY_LIMIT:-512M}'
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 5s
      retries: 3

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '${NODE_EXPORTER_CPU_LIMIT:-0.2}'
          memory: '${NODE_EXPORTER_MEMORY_LIMIT:-128M}'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '${CADVISOR_CPU_LIMIT:-0.2}'
          memory: '${CADVISOR_MEMORY_LIMIT:-128M}'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana/config:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    networks:
      - monitoring-network
    depends_on:
      - prometheus
      - loki
    deploy:
      resources:
        limits:
          cpus: '${GRAFANA_CPU_LIMIT:-0.5}'
          memory: '${GRAFANA_MEMORY_LIMIT:-256M}'
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    volumes:
      - ./monitoring/loki/config:/etc/loki
      - loki-data:/loki
    command: -config.file=/etc/loki/loki-config.yml
    ports:
      - "3100:3100"
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '${LOKI_CPU_LIMIT:-0.5}'
          memory: '${LOKI_MEMORY_LIMIT:-512M}'
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 5s
      retries: 3

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail/config:/etc/promtail
      - /var/log:/var/log
      - ./logs:/app/logs
      - ./nginx/logs:/nginx/logs
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - monitoring-network
      - app-network
    depends_on:
      - loki
    deploy:
      resources:
        limits:
          cpus: '${PROMTAIL_CPU_LIMIT:-0.2}'
          memory: '${PROMTAIL_MEMORY_LIMIT:-128M}'

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./monitoring/alertmanager/config:/etc/alertmanager
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    networks:
      - monitoring-network
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          cpus: '${ALERTMANAGER_CPU_LIMIT:-0.2}'
          memory: '${ALERTMANAGER_MEMORY_LIMIT:-128M}'
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  monitoring-network:
    driver: bridge
  app-network:
    external: true

volumes:
  prometheus-data:
  grafana-data:
  loki-data:
  alertmanager-data: